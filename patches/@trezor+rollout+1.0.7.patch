diff --git a/node_modules/@trezor/rollout/lib/index.js b/node_modules/@trezor/rollout/lib/index.js
index 7da6f65..45574f0 100644
--- a/node_modules/@trezor/rollout/lib/index.js
+++ b/node_modules/@trezor/rollout/lib/index.js
@@ -74,12 +74,14 @@ var versionUtils = __importStar(require("./utils/version"));
 var parse_1 = require("./utils/parse");
 var modifyFirmware = function (_a) {
     var fw = _a.fw, features = _a.features;
-    if (features.major_version === 2)
-        return fw;
-    if (versionUtils.isNewerOrEqual([features.major_version, features.minor_version, features.patch_version], [1, 8, 0])) {
-        return fw.slice(256);
-    }
+    // OneKey firmware 不需要 slice
     return fw;
+    // if (features.major_version === 2)
+    //     return fw;
+    // if (versionUtils.isNewerOrEqual([features.major_version, features.minor_version, features.patch_version], [1, 8, 0])) {
+    //     return fw.slice(256);
+    // }
+    // return fw;
 };
 var getChangelog = function (releases, features) {
     if (features.bootloader_mode) {
@@ -97,11 +99,21 @@ var getChangelog = function (releases, features) {
         }
         return releases;
     }
+    var onekey_version = features.onekey_version;
+    var major_version = features.major_version;
+    var minor_version = features.minor_version;
+    var patch_version = features.patch_version;
+    if (onekey_version) {
+        var onekey_version_list = onekey_version.split('.');
+        major_version = onekey_version_list[0];
+        minor_version = onekey_version_list[1];
+        patch_version = onekey_version_list[2];
+    }
     return releases.filter(function (r) {
         return versionUtils.isNewer(r.version, [
-            features.major_version,
-            features.minor_version,
-            features.patch_version,
+            major_version,
+            minor_version,
+            patch_version,
         ]);
     });
 };
@@ -109,10 +121,20 @@ var isNewer = function (release, features) {
     if (features.major_version === 1 && features.bootloader_mode) {
         return null;
     }
+    var onekey_version = features.onekey_version;
+    var major_version = features.major_version;
+    var minor_version = features.minor_version;
+    var patch_version = features.patch_version;
+    if (onekey_version) {
+        var onekey_version_list = onekey_version.split('.');
+        major_version = onekey_version_list[0];
+        minor_version = onekey_version_list[1];
+        patch_version = onekey_version_list[2];
+    }
     return versionUtils.isNewer(release.version, [
-        features.major_version,
-        features.minor_version,
-        features.patch_version,
+        major_version,
+        minor_version,
+        patch_version,
     ]);
 };
 var isRequired = function (changelog) {
@@ -132,6 +154,7 @@ exports.getInfo = function (_a) {
         score = score_1.getScore(features.device_id);
     }
     var bootloader_mode = parsedFeatures.bootloader_mode, major_version = parsedFeatures.major_version, minor_version = parsedFeatures.minor_version, patch_version = parsedFeatures.patch_version, fw_major = parsedFeatures.fw_major, fw_minor = parsedFeatures.fw_minor, fw_patch = parsedFeatures.fw_patch;
+
     var latest = parsedReleases[0];
     if (score) {
         parsedReleases = parsedReleases.filter(function (item) {
